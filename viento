#! /usr/bin/env python3
"""
This is the core of the Viento program. It is the main interface that the
user will interact with. This script handles commands and is able to manipulate
the viento_d.py daemon that drives the Viento transfer process. This script
also provides data about the program.

Author: tgsachse (Tiger Sachse)
Initial Release: 7/13/2017
Current Release: 7/18/2017
Version 0.3.0-beta
License: GNU GPLv3
"""
import os
import sys

def check_dirs():
    """
    
    """
    try:
        with open(f_links, 'r') as f:
            pass
    except FileNotFoundError:
        print("No links file exists. Please run 'viento setup' to make one.")
        quit()

    try:
        with open(f_service, 'r') as f:
            pass
    except FileNotFoundError:
        print("No service file exists. Would you like to create one at {}".format(f_service))
        i = input("(Y/n) > ")
        if i in ['y', 'Y', 'yes', 'Yes']:
            f_service_example = ['[Unit]\n',
                                 'Description=Viento Cloud Management Utility\n\n',
                                 '[Service]\n',
                                 'ExecStart=/usr/lib/python3.6/site-packages/viento_d.py\n\n',
                                 '[Install]\n',
                                 'WantedBy=default.target']
            for each in dirs:
                if not os.path.exists(each):
                    os.mkdir(each)
            with open(f_service, 'w') as f:
                for each in f_service_example:
                    f.write(each)

        elif i in ['n', 'N', 'no', 'No']:
            quit()

dirs = [os.path.expanduser('~/.config'),
        os.path.expanduser('~/.config/systemd'),
        os.path.expanduser('~/.config/systemd/user'),
        os.path.expanduser('~/.viento'),
        os.path.expanduser('~/.viento/logs'),
        os.path.expanduser('~/.viento/jobs')]

f_service = dirs[2] + '/viento.service'
f_links = dirs[3] + '/links.json'

try:
    command = sys.argv[1]
except IndexError:
    print("No command entered. Enter 'viento help' for a list of commands.")
    quit()

valid = ['start', 'stop',
         'enable', 'disable',
         'setup', 'status',
         'version', 'help']

if command in valid:
    if command == 'start':
        check_setup()
        os.system('systemctl --user start viento.service')
        print("Viento service started.")

    elif command == 'stop':
        check_setup()
        os.system('systemctl --user stop viento.service')
        print("Viento service stopped.")

    elif command == 'enable':
        check_setup()
        os.system('systemctl --user enable viento.service')
        print("Viento service enabled at login on next boot")
        print("Run 'viento start' to start the service right now.")

    elif command == 'disable':
        check_setup()
        os.system('systemctl --user disable viento.service')
        print("Viento service disabled at login on next boot")
        print("Run 'viento stop' to stop the service right now.")
        
    elif command == 'setup':
        os.system('/usr/lib/python3.6/site-packages/wind_setup.py')
    
    elif command == 'status':
        pass

    elif command == 'version':
        os.system('clear')
        print("Viento Cloud Management Utility\n\n" +
              "Version: v0.3.0-beta\n" +
              "Author: tgsachse (Tiger Sachse)\n" +
              "Intitial Release: 7/13/2017\n" +
              "Current Release: 7/18/2017\n" +
              "License: GNU GPLv3")

    elif command == 'help':
        os.system('clear')
        print("Welcome to Viento. Here's a list of commands:\n" +
              "start    stop    enable\n" +
              "disable  setup   status\n" +
              "version  help")

else:
    print("Invalid command.")
